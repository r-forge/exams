\documentclass[nojss]{jss}
\usepackage{thumbpdf}
%% need no \usepackage{Sweave}

%% additional commands
\newcommand{\squote}[1]{`{#1}'}
\newcommand{\dquote}[1]{``{#1}''}
\newcommand{\class}[1]{\dquote{\code{#1}}}
%% for internal use
\newcommand{\fixme}[1]{\emph{\marginpar{FIXME} (#1)}}
\newcommand{\readme}[1]{\emph{\marginpar{README} (#1)}}

%% new environments for exams
\newenvironment{question}{\item \textbf{Problem}\newline}{}
\newenvironment{solution}{\textbf{Solution}\newline}{}

\author{Nikolaus Umlauf\\Universit\"at Innsbruck\\
   \And Friedrich Leisch\\Universit\"at f\"ur\\Bodenkultur Wien
   \And Achim Zeileis\\Universit\"at Innsbruck}
\Plainauthor{Nikolaus Umlauf, Friedrich Leisch, Achim Zeileis}

\title{Flexible Generation of E-Learning Exams in \proglang{R}: \pkg{Moodle} Quizzes, \pkg{OLAT} Assessments, and Beyond}
\Plaintitle{Flexible Generation of E-Learning Exams in R: Moodle Quizzes, OLAT Assessments, and Beyond}
\Shorttitle{Flexible Generation of E-Learning Exams in \proglang{R}}

\Keywords{exams, e-learning, multiple choice, arithmetic problems, \code{Sweave}, \proglang{R}, {\LaTeX}, HTML, XML, \pkg{Moodle}, \pkg{OLAT}}
\Plainkeywords{exams, e-learning, multiple choice, arithmetic problems, Sweave, R, LaTeX, HTML, XML, Moodle, OLAT}

\Abstract{ 
  \pkg{exams} extensions
  
  still based on \code{Sweave}, but rather than just calling {\LaTeX} to
  produce PDF files, each weaved exercise is read into \proglang{R}
  
  advantage: can be rendered into a wider range of output formats, e.g.,
  {\LaTeX} can be converted to HTML and embedded into XML formats that
  can be read into online learning platforms such as \pkg{Moodle} or
  \pkg{OLAT}
  
  contribution:
  (1)~illustration of readily available functionality,
  (2)~design of the underlying infrastructure,
  (3)~discussion how other functionality can be built on top of the
  existing tools.
}

\Address{
  Nikolaus Umlauf, Achim Zeileis\\
  Department of Statistics\\
  Faculty of Economics and Statistics\\
  Universit\"at Innsbruck\\
  Universit\"atsstr.~15\\
  6020 Innsbruck, Austria\\
  E-mail: \email{Nikolaus.Umlauf@uibk.ac.at}, \email{Achim.Zeileis@R-project.org}\\
  URL: \url{http://eeecon.uibk.ac.at/~umlauf/}, \url{http://eeecon.uibk.ac.at/~zeileis/}\\

  Friedrich Leisch\\
  Institute of Applied Statistics and Computing\\
  Universit\"at f\"ur Bodenkultur Wien\\
  Peter Jordan-Str.~82\\
  1180 Wien, Austria\\
  E-mail: \email{Friedrich.Leisch@R-project.org}\\
  URL: \url{http://www.rali.boku.ac.at/friedrichleisch.html}
}

\begin{document}

\SweaveOpts{engine = R, eps = FALSE, keep.source = TRUE}
%\VignetteIndexEntry{Flexible Generation of E-Learning Exams in R: Moodle Quizzes, OLAT Assessments and Beyond}
%\VignetteDepends{stats, graphics, tools, utils, tth, base64enc}
%\VignetteKeywords{exams, e-learning, multiple choice, arithmetic problems, Sweave, R, LaTeX, HTML, XML, Moodle, OLAT}
%\VignettePackage{exams}

<<preliminaries, echo=FALSE, results=hide>>=
options(width = 70, prompt = "R> ", continue = "+  ")
library("exams")
library("base64enc")
library("tth")
@

\section{Introduction} \label{sec:intro}

The design for version~1 of the \pkg{exams} package was conceived
seven years ago (in 2006) when the original authors
\citep{exams:Gruen+Zeileis:2009} were involved in a redesign of the
introductory statistics lecture at WU Wirtschaftsuniversit\"at Wien.
Back then the main goal was to be able to produce exams along with
associated self-study materials as PDF (portable document format)
files. Thus, the main focus was still on printable materials for
classic classroom exams. Although e-learning systems started to become
available more easily back at that time, they were still not very widely used
and, more importantly, rather few easy-to-use standards for specifying
e-learning exams were available (e.g., WU Wien used a partially
self-developed e-learning system).

However, since 2006 the situation
has clearly changed: E-learning systems are now abundant with many
universities offering one (ore more) e-learning system(s) in which
all students are readily registered. Consequently, many lecturers
routinely offer online exams (or tests, quizzes, assessments)
for large-lecture courses -- either as self-study materials or as
(part of) the main assessment of the course.

Among the more popular choices of learning management systems are the
open-source systems \pkg{Moodle}, developed by \cite{exams:Moodle:2012} 
and supported by a large world-wide user community, or \pkg{OLAT}
(for online learning and training), developed by \cite{exams:OLAT:2012},
or the commercial \pkg{Blackboard} system, developed by \citep{exams:Blackboard:2010}.
Standards for specifying and exchanging e-learning exams/assessements
have also emerged. While \pkg{Moodle} relies on its own \pkg{Moodle}
XML (extensible markup language) format, \pkg{OLAT} and \pkg{Blackboard}
employ certain subsets of the international QTI (question \& test interoperability)
standard, version~1.2, maintained by the \cite{exams:QTI12:2012}.
The successor formats are QTI~2.0 and the current QTI~2.1 which is
for example employed in the \pkg{ONYX} testsuite \citep{exams:BPS:2012}
that also offers interfaces to \pkg{OLAT} and \pkg{Blackboard}.

Therefore, although the PDF exams produced by version~1 of the \pkg{exams}
package as introduced by \cite{exams:Gruen+Zeileis:2009} are still
useful for many types of courses, it would also be highly desirable
to have support for generating e-learning exams \emph{from the same pool
of exercises}. In fact, this became an apparent need when the authors
of the present manuscript took over new large-lecture statistics and
mathematics courses at their respective institutions (Universit\"at Innsbruck
and Universit\"at f\"ur Bodenkultur Wien, respectively). For example,
the new ``Mathematics~101'' lecture at Universit\"at Innsbruck is
currently attended by about 1,600~students (mostly first-year business and
economics students) and accompanied by biweekly online exams conducted in
the university's \pkg{OLAT} learning management system. This was a strong
incentive to start developing version~2 of the \pkg{exams} package that is presented
here and offers an extensible toolbox for generating e-learning exams,
including easy-to-use functions for \pkg{Moodle} quizzes and \pkg{OLAT}
assessments.

The new version of the \pkg{exams} package for the \proglang{R} system for 
statistical computing \citep{exams:R:2012} is now available from the
Comprehensive \proglang{R} Archive Network at \url{http://CRAN.R-project.org/package=exams}.
As prior versions of \pkg{exams} it employs ideas and technologies
from literate programming and reproducible research
\citep[see e.g.,][]{exams:Knuth:1992,exams:deLeeuw:2001,exams:Leisch+Rossini:2003}
by using \code{Sweave()} \citep{exams:Leisch:2002a} to combine data-generating
processes (DGPs) in \proglang{R} with corresponding questions/solutions
in {\LaTeX} \citep{exams:Knuth:1984,exams:Lamport:1994}. But in addition
to producing exams in PDF format, the new version of \pkg{exams} includes
extensible tools for generating other output formats \emph{without} having
to modify the pool of exercises. Thus, the design principles of the \pkg{exams}
package are only somewhat extended compared to version~1:
\begin{itemize}
  \item Each exercise template (also called ``exercise'' for short) is a single
    \code{Sweave} file (\code{.Rnw}) interweaving \proglang{R} code for data
    generation and {\LaTeX} code for describing question and solution.
  \item Exams can be generated by randomly drawing different versions of exercises from a
    pool of such \code{Sweave} exercise templates. The resulting exams can be
    rendered into various formats including PDF, HTML, \pkg{Moodle} XML, or QTI~1.2 (for \pkg{OLAT}).
  \item Because exercises are separate standalone files maintenance is simple.
    Large teams can work jointly on the pool of exercises in a multi-author and
    cross-platform setting because each team member can independently develop
    and edit a single exercise.
\end{itemize}


In the remainder of this paper we illustrate in Section~\ref{sec:usage} how to use
both the old and new exam-generating functions that are readily available in the
package. Subsequently, we provide details about the design underyling the toolbox
for the new infrastructure in Section~\ref{sec:design}. Furthermore, Section~\ref{sec:extensions}
provides details on how to extend this toolbox, e.g., to other e-learning
environments or exam servers. Finally, a discussion in Section~\ref{sec:discussion}
concludes the paper.


\section[Using the exams package]{Using the \pkg{exams} package} \label{sec:usage}

\fixme{brief overview of functions and their return values}

\subsection[Version 1: PDF exams() from Sweave exercises]{Version~1: PDF \code{exams()} from \code{Sweave} exercises}

Exercise templates (or just ``exercises'' for short) are essentially
separate standard \code{Sweave} files \citep{exams:Leisch:2008a,exams:Leisch:2008}.
They are composed of the following elements:
\begin{itemize}
  \item \proglang{R} code chunks (as usual within \verb|<<>>=| and \code{@})
    for random data generation.
  \item A question and solution description contained in a {\LaTeX}
    environment of corresponding names. Both can contain \proglang{R}
    code chunks again or include data via \verb|\Sexpr{}|.
  \item Some metainformation about the exercise type (numeric, multiple
    choice, \dots), its correct solution etc. All meta-information commands
    are in {\LaTeX} style but are actually commented out and hidden in the final
    output file.
\end{itemize}
The underlying ideas are eplained in more detail by
\cite{exams:Gruen+Zeileis:2009} and Section~\ref{sec:design} provides
more technical details. Here, we focus on an illustration how to generate
different output formats form such exercises.

In Figure~\ref{fig:Rnw}, the \code{Sweave} file for a simple exercise asking
students to compute a one-sample $t$~test statistic is shown for
illustration \citep[as already used by][]{exams:Gruen+Zeileis:2009}. The
\proglang{R} chunk for the DGP, the \code{question} and \code{solution} environments,
and the metainformation can be easily distinguished. The {\LaTeX} file
resulting from an \code{Sweave()} call is shown in Figure~\ref{fig:tex}, and 
Figure~\ref{fig:pdf} shows the final compiled PDF output generated by
<<exams1, echo=TRUE, eval=FALSE>>=
library("exams")
set.seed(1090)
exams("tstat.Rnw")
@

To include the {\LaTeX} output
(see Figure~\ref{fig:tex}) in some master {\LaTeX} file, this needs to define
the \code{question} and \code{solution} environment. This mechanism can be
used to control the display, e.g., to suppress the solution in an exam
but to display it in associated self-study material
(see Section~\ref{sec:master} for further details).


%% from Rnw
\begin{figure}[p!]
\centering
\makebox[\textwidth]{\hrulefill}

<<echo=FALSE, results=tex>>=
invisible(file.copy(system.file("exercises", "tstat.Rnw", package = "exams"), "tstat.Rnw"))
Rnw <- readLines("tstat.Rnw")
cat(c("\\begin{verbatim}", Rnw, "\\end{verbatim}"), sep = "\n")
@

\makebox[\textwidth]{\hrulefill}
\caption{\label{fig:Rnw} A simple \code{Sweave} exercise: \code{tstat.Rnw}.}
\end{figure}

%% to LaTeX
\begin{figure}[t!]
\centering
\makebox[\textwidth]{\hrulefill}

<<echo=FALSE, results=hide>>=
set.seed(1090)
Sweave("tstat.Rnw")
tex <- readLines("tstat.tex")
file.remove(c("tstat.Rnw", "tstat.tex"))
@
<<echo=FALSE, results=tex>>=
cat(c("\\begin{verbatim}", tex, "\\end{verbatim}"), sep = "\n")
@

\makebox[\textwidth]{\hrulefill}
\caption{\label{fig:tex} {\LaTeX} output of \code{Sweave("tstat.Rnw"}).}
\end{figure}

%% to PDF/HTML
\begin{figure}[p!]
\centering
\makebox[\textwidth]{\hrulefill}
\begin{enumerate}

<<echo=FALSE, results=tex>>=
cat(tex, sep = "\n")
@

\end{enumerate}
\makebox[\textwidth]{\hrulefill}
\caption{\label{fig:pdf} Display of a \code{tstat} exercise as PDF via \code{exams()} (or \code{exams2pdf()}).}

\vspace*{0.5cm}

\includegraphics[width=\textwidth]{screenshots/exams2html-tstat.png}
\caption{\label{fig:exams2html-tstat} Display of a \code{tstat} exercise as HTML via \code{exams2html()}.
MathML is employed for mathematic equations, as rendered by a \pkg{Firefox} browser.}
\end{figure}

<<myexam1>>=
myexam <- list(
  "boxplots",
  c("confint", "ttest", "tstat"),
  c("anova", "regression"),
  "scatterplot",
  "relfreq")
odir <- tempfile()
set.seed(1090)
x1 <- exams(myexam, n = 5, dir = odir, template = c("exam", "solution"))
@

\subsection[Version 2: Producing PDF, HTML, or XML for Moodle or OLAT]{Version~2: Producing PDF, HTML, or XML for \pkg{Moodle} or \pkg{OLAT}}

\subsubsection[Producing PDF documents: exams2pdf()]{Producing PDF documents: \code{exams2pdf()}}

proof-of-concept reimplementation of \code{exams()}

<<exams2pdf, eval=FALSE>>=
set.seed(1090)
exams2pdf("tstat.Rnw")
@

\subsubsection[Producing HTML documents: exams2html()]{Producing HTML documents: \code{exams2html()}}

<<exams2html, eval=FALSE>>=
set.seed(1090)
exams2html("tstat.Rnw")
@


mention problem with browsing local HTML files on some platforms
in \pkg{RStudio} \citep{exams:RStudio:2012} for versions $< 0.97.133$ in a footnote

\subsubsection[Producing Moodle XML: exams2moodle()]{Producing \pkg{Moodle} XML: \code{exams2moodle()}}

<<exams2moodle, eval=FALSE>>=
set.seed(1090)
exams2moodle(myexam, n = 5, dir = odir)
@

\fixme{need Moodle screenshot}

\subsubsection[Producing QTI 1.2 XML (for OLAT): exams2qti12()]{Producing QTI 1.2 XML (for \pkg{OLAT}): \code{exams2qti12()}}

<<exams2qti12, eval=FALSE>>=
set.seed(1090)
exams2qti12(myexam, n = 5, dir = odir)
@

\begin{figure}[t!]
\centering
\includegraphics[width=\textwidth]{screenshots/exams2qti12-boxplots.png}
\caption{\label{fig:exams2qti12-boxplots} Display of exercise~1 (\code{boxplots}) from
  \code{myexam} in (a German installation of) \pkg{OLAT} (as rendered by a \pkg{Firefox} browser).}
\end{figure}


\section{Design} \label{sec:design}

\subsection{Extended specification of exercises}

\begin{table}[t!]
\centering
\begin{tabular}{lp{11.8cm}} \hline
Command & Description \\ \hline
\verb|\extype{}|      & Specification of the type of exercise (required): \code{num}
                        for questions with a numeric answer, \code{mchoice} for questions
			with multiple-choice answers, \code{schoice} for questions with
			single-choice answers (i.e., multiple-choice with exactly one correct
			solution), \code{string} for questions with a (short) text answer, or
			\code{cloze} for cloze solutions (i.e., combinations of the above). \\
\verb|\exname{}|      & Short name/description (to be used for printing within \proglang{R}). \\
\verb|\extitle{}|     & Pretty longer title. \\
\verb|\exsection{}|   & Section of the exercise (with slashes for subsections as in a URL). \\
\verb|\exversion{}|   & Version of the exercise. \\ \hline
\verb|\exsolution{}|  & Correct solution (required). It must contain a numeric solution for \code{num},
                        a string of zeros/ones for \code{mchoice}/\code{schoice}, or a character
			string of \code{string}. For \code{cloze} a combination of these can
			be specified, e.g., \verb|\exsolution{1.23}{0}{median}|. \\
\verb|\extolerance{}| & Tolerance limits (of length~1 or~2) for \code{num} solutions. If unspecified
                        the tolerance is 0. For length~2, the lower and upper tolerance can be
			specified separately.\\
\verb|\exclozetype{}| & List of types for the elements of a \code{cloze} exercise, e.g.,
                        \verb|\exclozetype{num}{mchoice}{string}| for the example above. \\ \hline
\verb|\expoints{}|    & Default points for correct solution. \\
\verb|\extime{}|      & Default time (in seconds) for solution. \\
\verb|\exshuffle{}|   & Logical indicating whether \code{mchoice}/\code{schoice}
                        answers should be shuffled (in \pkg{Moodle} or other e-learning systems). \\
\verb|\exsingle{}|    & Logical indicating whether radio buttons should be used in \pkg{Moodle}. \\ \hline
\end{tabular}
\caption{\label{tab:metainfo} Overview of metainformation commands in exercises. The commands in the
  first section allow for a general description, those in the section section for question/answer
  specification, and those in the last section for customization in e-learning environments. Only
  \texttt{extype} and \texttt{exsolution} are required (but \texttt{exname} is recommended
  additionally for nice printing in \proglang{R}).}
\end{table}


\subsection[The xexams() wrapper function]{The \code{xexams()} wrapper function}

\code{xexams}

drivers to \code{sweave}, \code{read}, \code{transform}, \code{write}

we provide some drivers (e.g., \code{read_exercise}) as well as various
driver generators (e.g., \code{make_exercise_transform_html})

for example for \code{exams2html}:
\begin{enumerate}
  \item \code{sweave:} \code{Sweave()} is called with \code{pdf = FALSE} and
    \code{png = TRUE} and (by default) with \code{quiet = TRUE}, \code{resolution = 100},
    \code{width = 4}, \code{height = 4}.
  \item \code{read}: \code{read_exercise()}.
  \item \code{transform}: \code{make_exercise_transform_html(...)}.
  \item \code{write}: \code{make_exams_write_html(template = "plain", ...)}.
\end{enumerate}


return value is nested list (Table~\ref{tab:xexam}), currently not classed

\begin{table}[t!]
\hrulefill
\begin{Code}
list(               ## of 'exams', length: n
  list(             ## of 'exercises', length: k
    list(           ## of exercise content, length: 6
      question,
      questionlist,
      solution,
      solutionlist,
      metainfo,
      supplements
    )
  )
)
\end{Code}
\hrulefill
\caption{\label{tab:xexam} Structure of the return value of \code{xexams}.}
\end{table}

\subsection[The read driver: read_exercise() and read_metainfo()]{The \code{read} driver: \code{read\_exercise()} and \code{read\_metainfo()}}

\subsection[LaTeX-to-HTML transform driver generator]{{\LaTeX}-to-HTML \code{transform} driver generator}

\code{make_exercise_transform_html()}

\pkg{TtH} \citep{exams:Hutchinson:2012} with \proglang{C}~functions \code{tth} ({\TeX} to HTML), \code{ttm} ({\TeX} to HTML/MathML)

\proglang{R} package \pkg{tth} \citep{exams:Hutchinson+Leisch+Zeileis:2012} with suitable \proglang{R} wrapper functions

\code{tex2image()} which runs \code{texi2dvi()} from the base \proglang{R} package \pkg{tools}
and subsequently converts the resulting PDF to a raster image using a \code{system()} call to
\pkg{ImageMagick}'s \code{convert} function \citep{exams:ImageMagick:2012}. Thus, for this function
\pkg{ImageMagick} is assumed to be installed and in the search path.

images can either be part of the supplementary files or embedded directly in the HTML code
using Base64 encoding \citep[via the \pkg{base64enc} package in \proglang{R}][]{exams:Urbanek:2012}

Displaying MathML in web pages has become very easy: \pkg{Firefox} long had native support for MathML and
for the Microsoft \pkg{Internet Explorer} the \pkg{MathPlayer} plugin \citep{exams:MathPlayer:2012} has
long been available. Meanwhile, other major browsers like Google \pkg{Chrome}, \pkg{Opera}, or \pkg{Safari}
also support MathML \citep[Section~1.2][]{exams:Vismor:2012}. Furthermore, \pkg{MathJax}
\citep{exams:MathJax:2012}, an open-source \proglang{JavaScript} engine, can be used to render
MathML formulas on a server rather than in the local browser.


\subsection[PDF and HTML write driver generators]{PDF and HTML \code{write} driver generators}

\subsection[Further functions for processing xexams return values]{Further functions for processing \code{xexams} return values}

\code{exams2moodle}, \code{exams2qti12}

mention MathML display of matrices within OLAT

\section[Extending the exams toolbox and writing new drivers]{Extending the \pkg{exams} toolbox and writing new drivers} \label{sec:extensions}

use \code{exams2wu} for illustration?


\section{Discussion and summary} \label{sec:discussion}

infrastructure vs.\ content

strategies for setting up exercises

experiences at Universit\"at Innsbruck




\section*{Acknowledgments}

We are indebted to our colleagues at the Department of Statistics
at Universit\"at Innsbruck for testing and challenging the code and making
suggestions for improvement. This project was also partially supported
by an e-learning grant by the Universit\"at Innsbruck. \fixme{Does this
have a reference/number?}

\bibliography{exams}

\end{document}
